{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC7BC,YAAW,WACWC,KAAKC,SAAW,IAEtCJ,EAAQ,CAAEH,WAAUC,UACpBO,EAAAX,GAASY,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,SAEtEG,EAAO,CAAEJ,WAAUC,UACnBO,EAAAX,GAASY,OAAOG,QAAQ,sBAAqCD,OAAfX,EAAS,QAAYW,OAANV,EAAM,O,GAEhEA,E,IAKL,IAAMY,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAIN,IAHA,IAAMjB,EAAQkB,SAASN,EAAKZ,MAAMmB,OAC5BC,EAAOF,SAASN,EAAKQ,KAAKD,OAC1BE,EAASH,SAASN,EAAKS,OAAOF,OAC3BG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAEhCxB,EAAcwB,EADOtB,GAASsB,EAAI,GAAKF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  setTimeout(() => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n  resolve({ position, delay });\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n  reject({ position, delay });\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n  }, delay);\n  });\n  }\n\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const delay = parseInt(form.delay.value);\n  const step = parseInt(form.step.value);\n  const amount = parseInt(form.amount.value);\n  for (let i = 1; i <= amount; i++) {\n    const currentDelay = delay + (i - 1) * step;\n    createPromise(i, currentDelay);\n  }\n});\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$parcel$interopDefault","Notify","success","concat","failure","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","parseInt","value","step","amount","i"],"version":3,"file":"03-promises.51e6e724.js.map"}