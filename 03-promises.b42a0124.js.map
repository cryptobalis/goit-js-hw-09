{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7BC,YAAW,KACWC,KAAKC,SAAW,IAEtCJ,EAAQ,C,SAAEH,E,MAAUC,IACpBO,EAAAX,GAASY,OAAOC,QAAQ,uBAAqBV,QAAiBC,SAE9DG,EAAO,C,SAAEJ,E,MAAUC,IACnBO,EAAAX,GAASY,OAAOE,QAAQ,sBAAoBX,QAAeC,O,GAExDA,EAAM,G,CAKX,MAAMW,EAAOC,SAASC,cAAc,SACpCF,EAAKG,iBAAiB,UAAUC,IAC9BA,EAAMC,iBACN,MAAMhB,EAAQiB,SAASN,EAAKX,MAAMkB,OAC5BC,EAAOF,SAASN,EAAKQ,KAAKD,OAC1BE,EAASH,SAASN,EAAKS,OAAOF,OACpC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAEhCvB,EAAcuB,EADOrB,GAASqB,EAAI,GAAKF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nimport \"notiflix/dist/notiflix-3.2.6.min.css\";\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n  setTimeout(() => {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n  resolve({ position, delay });\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n  reject({ position, delay });\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  }\n  }, delay);\n  });\n  }\n\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const delay = parseInt(form.delay.value);\n  const step = parseInt(form.step.value);\n  const amount = parseInt(form.amount.value);\n  for (let i = 1; i <= amount; i++) {\n    const currentDelay = delay + (i - 1) * step;\n    createPromise(i, currentDelay);\n  }\n});\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","$parcel$interopDefault","Notify","success","failure","$47d4ff9957288465$var$form","document","querySelector","addEventListener","event","preventDefault","parseInt","value","step","amount","i"],"version":3,"file":"03-promises.b42a0124.js.map"}